<Window x:Class="PL.Engineer.EngineerListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Engineer"
        mc:Ignorable="d"
        WindowStyle="None"
        Title="EngineerListWindow" Height="640" Width="800"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">

    <!-- Window background color -->
    <Window.Background>
        <SolidColorBrush Color="#FFD4EDE6"/>
    </Window.Background>

    <!-- External Grid -->
    <Grid>
        <!--<Button Style="{StaticResource CloseButton}" Click="CloseButton_Click"/>-->
        <Grid.RowDefinitions>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="500*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Internal, Upper Grid -->
        <Grid HorizontalAlignment="Stretch" Height="auto" Grid.Row="0" VerticalAlignment="Stretch" Width="auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400*"/>
                <ColumnDefinition Width="383*"/>
                <ColumnDefinition Width="17*"/>
            </Grid.ColumnDefinitions>

            <!-- Show filtering criteria -->
            <Label Content="Select Experience:" FontSize="20" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Top" Width="200"/>

            <!-- Filtering options , changing list of engineers according to expereince chosen-->
            <ComboBox Grid.Column="1" Margin="10,5,73,0" Width="300"
                      ItemsSource="{Binding Source={StaticResource EngineerExperienceCollectionKey}}"
                      SelectedValue="{Binding Path=Experience, Mode=TwoWay}" SelectionChanged="cbExperienceSelector_SelectionChanged">
                <!-- Apply the button style to the ComboBox -->
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="Foreground" Value="black"/>
                        <Setter Property="Background" Value="#FF76C7C0"/>
                        <Setter Property="BorderBrush" Value="#FF62A29D"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF62A29D"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
        </Grid>

        <!-- ListView ,if clicked o engineer, an update window will open-->
        <ListView Margin="5,5,5,100" Grid.Row="1" ItemsSource="{Binding EngineerList}" MouseDoubleClick="UpdateEngineerWindow_DoubleClick">
        </ListView>

        <!-- Button to Add Engineer -->
        <Button Content="Add" Grid.Row="1" HorizontalAlignment="Center" Width="280" Margin="0,498,0,10" Click="AddEngineerWindow_Click">
            <!-- Apply the  button style to the Button -->
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="#FF76C7C0"/>
                    <Setter Property="BorderBrush" Value="#FF62A29D"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Padding" Value="10"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF62A29D"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</Window>

