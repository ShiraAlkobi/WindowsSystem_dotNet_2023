<Window x:Class="PL.Engineer.AddUpdateEngineer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Engineer"
        mc:Ignorable="d"        
        Title="AddUpdateEngineer" Height="450" Width="350">

    <!-- Window background color -->
    <Window.Background>
        <SolidColorBrush Color="#FFD4EDE6"/>
    </Window.Background>

    <!-- Grid with grid lines-->
    <Grid ShowGridLines="True">
        <!-- Left StackPanel with labels -->
        <StackPanel HorizontalAlignment="Left" Grid.Column="0" Margin="10,25,0,25" Width="150" >
            <!--a label for each property of the engineer, also has a font and size -->
            <Label Content="Id:" Margin="0,10,0,0" FontFamily="Segoe UI" FontSize="14" FontWeight="Bold"/>
            <Label Content="Name:" Margin="0,10,0,0" FontFamily="Segoe UI" FontSize="14" FontWeight="Bold"/>
            <Label Content="Email:" Margin="0,10,0,0" FontFamily="Segoe UI" FontSize="14" FontWeight="Bold"/>
            <Label Content="Cost:" Margin="0,10,0,0" FontFamily="Segoe UI" FontSize="14" FontWeight="Bold"/>
            <Label Content="Level:" Margin="0,10,0,0" FontFamily="Segoe UI" FontSize="14" FontWeight="Bold"/>
            <Label Content="Task:" Margin="0,10,0,0" FontFamily="Segoe UI" FontSize="14" FontWeight="Bold"/>
        </StackPanel>

        <!-- Right StackPanel with TextBoxes, ComboBox, and margins adjusted -->
        <!--using binding according to each value of the engineer properties-->
        <!--the comboBox is the enum of the engineer experience-->
        <!--The task and id fields depends on the id - the isEnabled attribute is binding according to the id-->
        <StackPanel HorizontalAlignment="right" Margin="0,36,50,79" Width="156" >
            <TextBox Margin="0,5,0,10"
                 Text="{Binding CurrentEngineer.Id, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}"
                     IsEnabled="{Binding CurrentEngineer.Id, Mode=OneTime, Converter={StaticResource intToIsEnabledConverter}}"/>
            <TextBox Margin="0,11,0,10"
                 Text="{Binding CurrentEngineer.Name, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}"/>
            <TextBox Margin="0,8,0,10"
                 Text="{Binding CurrentEngineer.Email, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}"/>
            <TextBox Margin="0,12,0,10"
                 Text="{Binding CurrentEngineer.Cost, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}"
                     PreviewTextInput="CheckNumInput"/>
            <ComboBox Margin="0,10,0,10"
                  ItemsSource="{Binding Source={StaticResource EngineerExperienceCollectionKey}}" 
                    SelectedValue="{Binding CurrentEngineer.Level, Mode=TwoWay, NotifyOnValidationError=true, 
                        ValidatesOnExceptions=true}"       />
            <ComboBox Margin="0,8,0,10"
                 ItemsSource="{Binding AllTasks}" SelectedItem="{Binding TaskAssigned , Mode=TwoWay}"
                   SelectedValue="{Binding CuurentEngineer.Task,Mode=TwoWay,NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                    IsEnabled="{Binding CurrentEngineer.Id, Mode=OneTime, Converter={StaticResource taskToIsEnabledConverter}}"/>
        </StackPanel>

        <!-- Add Engineer Button -->
        <Button Content="Add Engineer" Margin="10,330,10,34"
            Visibility="{Binding CurrentEngineer.Id, Mode=OneTime, Converter={StaticResource intToVisibilityConverterAdd}}" Click="AddEngineer_Click">
            <!-- Apply font properties to button -->
            <Button.FontFamily>
                <FontFamily>Segoe UI</FontFamily>
            </Button.FontFamily>
            <Button.FontSize>16</Button.FontSize>
            <Button.FontWeight>Bold</Button.FontWeight>
            <!-- Apply the button style to the Button -->
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="#FF76C7C0"/>
                    <Setter Property="BorderBrush" Value="#FF62A29D"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="Padding" Value="10"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF62A29D"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!-- Update Engineer Button -->
        <Button Content="Update Engineer" Margin="10,330,10,34"
            Visibility="{Binding CurrentEngineer.Id, Mode=OneTime, Converter={StaticResource intToVisibilityConverterUpdate}}" Click="UpdateEngineer_Click">
            <!-- Apply font properties to button -->
            <Button.FontFamily>
                <FontFamily>Segoe UI</FontFamily>
            </Button.FontFamily>
            <Button.FontSize>16</Button.FontSize>
            <Button.FontWeight>Bold</Button.FontWeight>
            <!-- Apply the button style to the Button -->
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="#FF76C7C0"/>
                    <Setter Property="BorderBrush" Value="#FF62A29D"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="Padding" Value="10"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF62A29D"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
